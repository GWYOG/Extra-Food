buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable
plugins {
	id "com.matthewprenger.cursegradle" version "1.0.4"
}
*/
sourceCompatibility = 1.7 
targetCompatibility = 1.7 


ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group= "dmf444.ExtraFood" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ExtraFood"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    
    replaceIn "Core/lib/ModInfo.java"
    replace "@VERSION@", "${config.mod_version}.${System.getenv("BUILD_NUMBER") ?: config.build_number}"
	
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20151229"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

version = "${config.minecraft_version}-${config.mod_version}.${System.getenv("DRONE_BUILD_NUMBER") ?: config.build_number}"

repositories { 
  mavenCentral() 
    maven { 
        name = "chickenbones" 
        url = "http://chickenbones.net/maven/" 
  }
      maven { // The repo from which to get waila 
         name "Mobius Repo" 
         url "http://mobiusstrip.eu/maven" 
     } 
  
} 
dependencies {
    //compile "codechicken:CodeChickenCore:1.8-1.0.5.36:dev"
    //compile "codechicken:NotEnoughItems:1.8-1.0.5.82:dev"
    //compile "codechicken:CodeChickenLib:1.8-1.1.2.133:dev"
    compile files('lib/Waila-1.6.0-B3_1.8.8-dev.jar')
	
	
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

/*curseforge {
    apiKey = '123-456' // saved in the build environment vars
	project{
    id = "222348" // my project url is http://minecraft.curseforge.com/mc-mods/222348-extra-food
    changelog = """
    Working on 1.8, Inital update + new renderers and such
    """
    releaseType = "alpha"
	}
    // the default obfuscated jar is uploaded by default
    // artifact = project.file("some/jar/to/upload.jar")

    // allows you to add extra compatible MC versions. The one specified in the minecraft{} block is used by default.
    // addGameVersion "1.7.1"
    // addGameversion "1.7.0", "1.7.4"
    
    // Allows you to specify additional files that should be uploaded with your main jar
    //additionalArtifact deobfJar
    // additionalArtifact "$project.buildDir/libs/A-Custom-File.txt"
    
}*/
processResources
{
    // exclude xcf files, as they are for development only
    exclude '**/*.xcf'


    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'


        // replace version and mcversion
        expand 'mod_version': project.version, 'minecraft_version': project.config.minecraft_version
    }


    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}
